import * as React from 'react';

/**
 * Return a slugified copy of a string.
 *
 * @param {string} str The string to be slugified
 * @return {string} The slugified string.
 */
declare function toSlug(str: string): string;

/**
 * On the server, React emits a warning when calling `useLayoutEffect`.
 * This is because neither `useLayoutEffect` nor `useEffect` run on the server.
 * We use this safe version which suppresses the warning by replacing it with a noop on the server.
 *
 * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect
 */
declare const useIsomorphicLayoutEffect: typeof React.useLayoutEffect;

declare function usePrevious<T>(value: T): T;

declare function objectsToArray(object: object): string[];
declare function objectsToString(object: object): string;
declare function findMatchArray(data: Array<string | object>, find: string, defaultValue: object): string | object;
declare function findMatchObject(data: object, defaultValue: object | string): string | object;

/**
 *
 * @param text highlight word on context
 * @param highlights all highlights with Typography configration objects
 * @returns Typography for the given highlight
 */
declare function getProps<T, H, P>(text: T, highlights: Array<H>): object;
/**
 *
 * @param input the typography complete word
 * @param regexes regexes for the words to be highlighted
 * @param highlights Typography highlight object with highlight word and typography configration object
 * @returns
 */
declare function highlight<T, H, P>(input: string, regexes: Array<RegExp>, highlights: Array<H>, component: any): any;

export { findMatchArray, findMatchObject, getProps, highlight, objectsToArray, objectsToString, toSlug, useIsomorphicLayoutEffect, usePrevious };
