import { NavBarLinksProps, NavBarLogoProps, HeroProps, ContentProps, ButtonProps, IconTextProps, TypographyVariant, ImageTextProps, ImageContentProps, LinkProps, BaseStyle, GridBaseStyle, CardIconTextProps } from 'reactwiind';
import { FC, ReactNode } from 'react';

interface WingoHeaderProps extends NavBarLinksProps {
    logo: NavBarLogoProps;
}
declare const WingoHeader: FC<WingoHeaderProps>;

interface StandardHeaderProps extends NavBarLinksProps {
    logo: NavBarLogoProps;
    right: ReactNode;
}
declare const StandardHeader: FC<StandardHeaderProps>;

interface HeroContentItemProps extends HeroProps, ContentProps {
    item?: React.ElementType | ReactNode | null;
    button?: ButtonProps;
}
declare const HeroContentItem: FC<HeroContentItemProps>;

interface HeroContentProps extends HeroProps, ContentProps {
    item?: React.ElementType | ReactNode | null;
    button?: ButtonProps;
}
declare const HeroContent: FC<HeroContentProps>;

interface FeaturedImageIconTextListProp {
    list?: Array<IconTextProps>;
    className?: string;
    img?: (props: any) => JSX.Element;
    heading?: ReactNode | string;
    headingVariant?: TypographyVariant;
}
declare const FeaturedImageIconTextList: FC<FeaturedImageIconTextListProp>;

interface IconTextListProp {
    list?: Array<IconTextProps>;
    className?: string;
    col?: string;
}
declare const IconTextList: FC<IconTextListProp>;

interface ImageTextListProps {
    list?: Array<ImageTextProps>;
    heading?: React.ReactNode | string;
}
declare const ImageTextList: FC<ImageTextListProps>;

interface ImageContentListProps {
    list?: Array<ImageContentProps>;
    heading?: React.ReactNode | string;
}
declare const ImageContentList: FC<ImageContentListProps>;

interface LinksProps {
    links?: Array<LinkProps>;
    heading?: string | ReactNode;
    col?: string;
}
declare const Links: FC<LinksProps>;

interface CardIconTextListProp extends BaseStyle, GridBaseStyle {
    list?: Array<CardIconTextProps>;
    className?: string;
    item?: CardIconTextProps;
}
declare const CardIconTextList: FC<CardIconTextListProp>;

interface WingoFooterCol {
    logo?: ReactNode;
    social?: ReactNode;
    heading?: string;
    heading2?: string;
    list?: Array<LinkProps>;
    list2?: Array<LinkProps>;
}
interface WingoFooterProps {
    col1: WingoFooterCol;
    col2: WingoFooterCol;
    col3: WingoFooterCol;
    bgcolor?: string;
}
declare const WingoFooter: FC<WingoFooterProps>;

interface SocialProps {
    href?: string;
    icon?: string;
    className?: string;
    color?: string;
}
declare const socialIcons: {
    linkedin: string;
    youtube: string;
    facebook: string;
    instagram: string;
};
declare const Social: ({ list, fill }: {
    list?: SocialProps[] | undefined;
    fill?: string | undefined;
}) => JSX.Element;

interface StandardFooterProps extends NavBarLinksProps {
}
declare const StandardFooter: FC<StandardFooterProps>;

interface StandardPageProps {
    header: StandardHeaderProps;
    footer: StandardFooterProps;
    children: ReactNode | Array<ReactNode> | null;
}
declare const StandardPage: FC<StandardPageProps>;

export { CardIconTextList, CardIconTextListProp, FeaturedImageIconTextList, FeaturedImageIconTextListProp, HeroContent, HeroContentItem, HeroContentItemProps, HeroContentProps, IconTextList, IconTextListProp, ImageContentList, ImageContentListProps, ImageTextList, ImageTextListProps, Links, LinksProps, Social, SocialProps, StandardFooter, StandardFooterProps, StandardHeader, StandardHeaderProps, StandardPage, StandardPageProps, WingoFooter, WingoFooterProps, WingoHeader, WingoHeaderProps, socialIcons };
