import { FC, ReactNode } from 'react';
import classNames from 'classnames';
import {BoyAlphabets, PlaceholderIcon, PlaceholderImage} from "rw-assets";
import {Hero, Container, useTheme, Typography, IconText, type IconTextProps, type TypographyVariant} from 'reactwiind';
import {IconTextList, IconTextListProp} from "../Lists";
import {gets} from "../base";


export interface FeaturedImageIconTextListProp {

  list?: Array<IconTextProps>;
  className?: string;
  img?: (props:any)=>JSX.Element;
  heading?: ReactNode | string;
  headingVariant?: TypographyVariant;
}

const defaultList: Array<IconTextProps> = [
    {text:"Sample icon text", icon:PlaceholderIcon},
    {text:"Sample icon text", icon:PlaceholderIcon},
    {text:"Sample icon text", icon:PlaceholderIcon}
]

const defaultHeading:string = "Sample Heading";
 
export const FeaturedImageIconTextList:FC<FeaturedImageIconTextListProp> = ({list = defaultList,img:Img, headingVariant="h3", heading}) => {
  
  heading = heading ?? defaultHeading;
  Img = (Img ?? PlaceholderImage);
  const isText = typeof heading == 'string';

  return  <Container bgcolor="bg-acccent">     
           <Hero>
                <Hero.Item>
                   { Img ? <Img />: '' } 
                </Hero.Item> 
                
                <Hero.Item>
                  <div>
                      {isText?<Typography variant={headingVariant} className={classNames(gets?.("featuredimagetextlist.heading") as string)}>{heading}</Typography>:heading}
                      <IconTextList list = { list }/>
                  </div>
              </Hero.Item>
            </Hero>
          </Container> 
}    